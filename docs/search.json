[{"path":"https://hendersontrent.github.io/theft/articles/theft.html","id":"core-calculation-functions","dir":"Articles","previous_headings":"","what":"Core calculation functions","title":"Introduction to theft","text":"going use dataset comes standard theft called simData. dataset contains collection randomly generated time series six different types processes. dataset can accessed via: data follows following structure:","code":"theft::simData head(simData) #>         values timepoint                 id        process #> 1: -0.22763125         1 Gaussian Noise_113 Gaussian Noise #> 2: -0.14548558         2 Gaussian Noise_113 Gaussian Noise #> 3: -0.07142003         3 Gaussian Noise_113 Gaussian Noise #> 4:  0.61953024         4 Gaussian Noise_113 Gaussian Noise #> 5:  0.12765668         5 Gaussian Noise_113 Gaussian Noise #> 6: -0.62737665         6 Gaussian Noise_113 Gaussian Noise"},{"path":"https://hendersontrent.github.io/theft/articles/theft.html","id":"calculating-feature-summary-statistics","dir":"Articles","previous_headings":"Core calculation functions","what":"Calculating feature summary statistics","title":"Introduction to theft","text":"core function automates calculation feature statistics calculate_features. can choose subset features calculate feature_set argument. choices currently , catch22, feasts, kats, tsfeatures tsfresh. Note Kats, tsfresh tsfel Python packages. R package reticulate used call Python code uses packages applies within broader tidy data philosophy embodied theft. present, depending input time-series, theft provides access ~1200 features. Prior using theft (want use Kats, tsfresh tsfel feature sets - R-based sets run fine) working Python installation download Kats using instructions located , tsfresh tsfel . reason, features included three sets included argument option. example catch22 set: Note catch22 set can set additional catch24 argument calculate mean standard deviation addition standard 22 features: Note want use Python-based packages, must first tell R (prior running calculate_features) Python location computer contains installed libraries. can done via init_theft function, path_to_python string specifying filepath location. example, (Trent), filepath correct Python \"~/opt/anaconda3/bin/python\" enter path_to_python argument. need call init_theft per R session. tidy dataframe included features set correspond available dataframe feature_list: NOTE: using tsfresh feature set, might want consider tsfresh_cleanup argument calculate_features. argument defaults FALSE specifies whether use -built tsfresh relevant feature filter . detailed comparison six feature sets, see paper detailed review1.","code":"feature_matrix <- calculate_features(data = simData,                                       id_var = \"id\",                                       time_var = \"timepoint\",                                       values_var = \"values\",                                       group_var = \"process\",                                       feature_set = \"catch22\") feature_matrix <- calculate_features(data = simData,                                       id_var = \"id\",                                       time_var = \"timepoint\",                                       values_var = \"values\",                                       group_var = \"process\",                                       feature_set = \"catch22\",                                      catch24 = TRUE) init_theft(path_to_python) head(feature_list) #>   feature_set                  feature #> 1     catch22       DN_HistogramMode_5 #> 2     catch22      DN_HistogramMode_10 #> 3     catch22                CO_f1ecac #> 4     catch22           CO_FirstMin_ac #> 5     catch22 CO_HistogramAMI_even_2_5 #> 6     catch22            CO_trev_1_num"},{"path":"https://hendersontrent.github.io/theft/articles/theft.html","id":"data-quality-checks","dir":"Articles","previous_headings":"","what":"Data quality checks","title":"Introduction to theft","text":"package comes function visualise data types calculated feature vectors. useful inspecting features might need dropped due large proportions undesirable (e.g., NA, NaN etc.) values.","code":"plot_quality_matrix(feature_matrix)"},{"path":"https://hendersontrent.github.io/theft/articles/theft.html","id":"normalisingscaling-functions","dir":"Articles","previous_headings":"","what":"Normalising/scaling functions","title":"Introduction to theft","text":"Putting calculated feature vectors equal scale crucial statistical machine learning model variables high variance can adversely impact model’s capacity fit data appropriately, learn appropriate weight values, minimise loss function. theft includes functions normalise_feature_vector rescale vector values (e.g. vector values participants study SB_BinaryStats_mean_longstretch1 feature), normalise_feature_frame rescale vector within dataframe variety different ranges ease--use. Current transformations available package include: z-score - \"z-score\" Sigmoid - \"Sigmoid\" Outlier-robust Sigmoid (credit Ben Fulcher creating original MATLAB version) - \"RobustSigmoid\" Min-max - \"MinMax\" Dataframe-based normalisation can performed using following:","code":"normed <- normalise_feature_frame(feature_matrix,                                    names_var = \"names\",                                    values_var = \"values\",                                    method = \"RobustSigmoid\")"},{"path":"https://hendersontrent.github.io/theft/articles/theft.html","id":"data-visualisation-and-low-dimensional-project-functions","dir":"Articles","previous_headings":"","what":"Data visualisation and low-dimensional project functions","title":"Introduction to theft","text":"package also comes built-plotting engine calculating visualising many types statistical graphics: Feature time-series matrix heatmap Low dimensional projections feature space scatterplot (along numerical results) Pairwise correlation matrix heatmap","code":""},{"path":"https://hendersontrent.github.io/theft/articles/theft.html","id":"feature-matrices","dir":"Articles","previous_headings":"Data visualisation and low-dimensional project functions","what":"Feature matrices","title":"Introduction to theft","text":"function plot_feature_matrix takes calculated features produces ggplot object heatmap showing feature vectors across x axis time series y axis. Prior plotting, function hierarchically clusters data across rows columns visually highlight empirical structure.  set interactive = TRUE function return interactive plot using plotly lets hover entries matrix better understand . especially useful dataset large.","code":"plot_feature_matrix(feature_matrix,                      is_normalised = FALSE,                      id_var = \"id\",                      method = \"RobustSigmoid\",                     interactive = FALSE) plot_feature_matrix(feature_matrix,                      is_normalised = FALSE,                      id_var = \"id\",                      method = \"RobustSigmoid\",                     interactive = TRUE)"},{"path":"https://hendersontrent.github.io/theft/articles/theft.html","id":"low-dimensional-projections","dir":"Articles","previous_headings":"Data visualisation and low-dimensional project functions","what":"Low dimensional projections","title":"Introduction to theft","text":"function plot_low_dimension takes calculated features, calculates principal components analysis (PCA) t-distributed stochastic neighbour embedding (t-SNE), produces ggplot object scatterplot showing first second principal components x y axis respectively, individual explained variance (PCA selected), time series point. plot = FALSE function returns dataframe results. variable specified group_var argument, scatterplot points automatically coloured group.  Alternatively, t-SNE version can specified similar fashion, perplexity hyperparameter able controlled user. Typical values range 5 50, depending size data. lower levels perplexity, local variations tend dominate, high levels perplexity, results can uninterpretable clusters can merge. See interactive article detailed review.","code":"plot_low_dimension(feature_matrix,                     is_normalised = FALSE,                     id_var = \"id\",                     group_var = \"group\",                     method = \"z-score\",                     low_dim_method = \"PCA\",                     plot = TRUE,                    show_covariance = TRUE) plot_low_dimension(feature_matrix,                     is_normalised = FALSE,                     id_var = \"id\",                     group_var = \"group\",                     method = \"z-score\",                     low_dim_method = \"t-SNE\",                     perplexity = 5,                     plot = TRUE,                    show_covariance = FALSE)"},{"path":[]},{"path":"https://hendersontrent.github.io/theft/articles/theft.html","id":"time-series-correlations","dir":"Articles","previous_headings":"Data visualisation and low-dimensional project functions > Pairwise correlations","what":"Time-series correlations","title":"Introduction to theft","text":"function plot_ts_correlations automates calculation correlations values unique time series, hierarchical clustering rows columns correlations, production final heatmap graphic. can switch default Pearson correlation Spearman rank correlation changing cor_method argument spearman.  , set interactive = TRUE function return interactive plot using plotly lets hover entries matrix better understand .","code":"plot_ts_correlations(simData,                       is_normalised = FALSE,                       id_var = \"id\",                       time_var = \"timepoint\",                      values_var = \"values\",                      method = \"RobustSigmoid\",                      cor_method = \"pearson\",                      interactive = FALSE) plot_ts_correlations(simData,                       is_normalised = FALSE,                       id_var = \"id\",                       time_var = \"timepoint\",                      values_var = \"values\",                      method = \"RobustSigmoid\",                      cor_method = \"spearman\",                      interactive = TRUE)"},{"path":"https://hendersontrent.github.io/theft/articles/theft.html","id":"feature-vector-correlations","dir":"Articles","previous_headings":"Data visualisation and low-dimensional project functions > Pairwise correlations","what":"Feature vector correlations","title":"Introduction to theft","text":"Similarly, one can also plot correlations feature vectors using plot_feature_correlations. general argument structure plot_ts_correlations.","code":"plot_feature_correlations(feature_matrix,                            is_normalised = FALSE,                            id_var = \"id\",                            names_var = \"names\",                           values_var = \"values\",                           method = \"RobustSigmoid\",                           cor_method = \"pearson\",                           interactive = FALSE)"},{"path":[]},{"path":"https://hendersontrent.github.io/theft/articles/theft.html","id":"feature-by-feature","dir":"Articles","previous_headings":"Time-series classification","what":"Feature-by-feature","title":"Introduction to theft","text":"Since feature-based time-series analysis shown particular promise classification problems, theft includes functionality exploring group separation addition low dimensional representation. compute_top_features function takes computed features performs following: Processes data ready analysis Computes classification algorithm statistical model entire input dataframe Extracts individual feature performance classification algorithm using designated performance metric Filters feature data top n performing features (n specified user) Plots feature \\(\\times\\) feature correlation matrix heatmap top performing features Plots group violin plots coloured class label top performing features analysis useful can help guide researchers toward efficient appropriate interpretation high-performing features (exist) helps protect -interpretation feature values. function returns object three components summarise steps: ResultsTable – dataframe containing feature names, feature set membership, performance statistics top performing features FeatureFeatureCorrelationPlot – ggplot containing pairwise correlations top performing features represented heatmap ViolinPlots – ggplot containing matrix violin plots showing class discrimination feature code produces analysis multiclass problem using Gaussian process classifier radial basis function kernel. implements custom “empirical null” procedure estimating p-value based classification accuracy real data compared distribution null samples built classification accuracies data random class label shuffles. also known permutation testing (see document2 good overview). Note higher numbers permutation samples means better empirical null distribution can generated. recommended run 100-1000 permutations, though comes considerable computation time. ’ll enable k-fold cross-validation procedure good measure. Note using procedures increases computation time. Electing use empirical null faster, top features determined based classification accuracy features p-values. , use_k_fold = FALSE, model instead fit data predict classes based data (caret language, equivalent caret::trainControl(method = \"none\") calling predict input data getting accuracy confusion matrix two). likely lead overfitting, return results orders magnitude faster use_k_fold = TRUE. Importantly, argument null_testing_method two choices: model free shuffles – Generates num_permutations number random shuffles group labels computes proportion match, returning distribution “accuracies”. model extremely fast involves null model fitting null model fits – Generates num_permutations number models trained tested data class label shuffled. method slow fits separate null models num_permutations shuffle p_value_method also two choices: empirical – calculates proportion null classification accuracies equal greater main model accuracy gaussian – calculates mean standard deviation null distribution analytically calculate p-value main model . Initial package testing indicated null distributions (especially increasing num_permutations) approximately Gaussian, meaning approach can feasibly used Note model free shuffles incompatible pool_empirical_null = TRUE null distributions exactly . , set pool_empirical_null = TRUE compute statistical analysis feature entire pooled empirical null classification results features. Setting FALSE compute p-value feature empirical null distribution. IMPORTANT NOTE: theft currently label results “statistically significant”. intend work, please adjust multiple comparisons considering numerous results threshold (e.g., \\(\\alpha = 0.05\\)) ensure decisions make grounded careful thought. seed argument allows specify number fix R’s random number generator reproducible results. defaults 123 nothing provided. component named can accessed regular use $ operator list indexing (return object). ’s top rows: equivalently achieve : feature-feature correlation plots accessed second object:  violin plots accessed third object:  two-class problems, users can fit statistical models directly compute p-values specifying one following models string argument test_method: \"t-test\", \"wilcox\" \"binomial logistic\". theft special procedures three options two-class problem registered thus none function arguments pertaining empirical null testing classification model parameters used. multiclass problems (binary), users can specify model name string valid method name popular caret package theft pass relevant sub-procedures make use arguments relating k-fold cross-validation, permutation testing, p-value calculation.","code":"outputs <- compute_top_features(feature_matrix,                                  id_var = \"id\",                                  group_var = \"group\",                                 num_features = 10,                                  normalise_violin_plots = FALSE,                                 method = \"RobustSigmoid\",                                 cor_method = \"pearson\",                                 test_method = \"gaussprRadial\",                                 use_balanced_accuracy = FALSE,                                 use_k_fold = TRUE,                                 num_folds = 10,                                 use_empirical_null =  TRUE,                                 null_testing_method = \"model free shuffles\",                                 p_value_method = \"empirical\",                                 num_permutations = 1000,                                 pool_empirical_null = FALSE,                                 seed = 123) head(outputs$ResultsTable) #>                                         feature  accuracy p_value_accuracy #> 1:     catch22_sp_summaries_welch_rect_area_5_1 0.8888889                0 #> 2:     catch22_sp_summaries_welch_rect_centroid 0.8388889                0 #> 3:         catch22_fc_local_simple_mean3_stderr 0.8111111                0 #> 4:           catch22_sb_motif_three_quantile_hh 0.7388889                0 #> 5:                      catch22_co_first_min_ac 0.7222222                0 #> 6: catch22_co_embed2_dist_tau_d_expfit_meandiff 0.6388889                0 #>    classifier_name               statistic_name #> 1:   gaussprRadial Mean classification accuracy #> 2:   gaussprRadial Mean classification accuracy #> 3:   gaussprRadial Mean classification accuracy #> 4:   gaussprRadial Mean classification accuracy #> 5:   gaussprRadial Mean classification accuracy #> 6:   gaussprRadial Mean classification accuracy head(outputs[[1]]) print(outputs$FeatureFeatureCorrelationPlot) print(outputs$ViolinPlots)"},{"path":"https://hendersontrent.github.io/theft/articles/theft.html","id":"multi-feature","dir":"Articles","previous_headings":"Time-series classification","what":"Multi-feature","title":"Introduction to theft","text":"multi-feature option also available. fit_multivariable_classifier function fits features instead individual features estimate classification accuracy. can split feature set (by_set argument set TRUE) enable systematic comparisons made available theft. First, let’s calculate features one set – ’ll just use catch22 feasts fastest R-based feature sets theft: Now can use multi-feature functionality (note similarity options single feature version specified ): can now access various named objects returned function, include: FeatureSetResultsPlot (by_set set TRUE) – ggplot displaying mean classification accuracy (balanced classification accuracy use_balanced_accuracy set TRUE) feature set TestStatistics – dataframe containing summary test statistics (p-values use_empirical_null set TRUE) RawClassificationResults – dataframe containing classification accuracies results main null prediction ’s feature set comparison plot:  ’s test statistics summary: ’s raw classifier results: Note multivariable version, valid caret method names able used specify test_method.","code":"feature_matrix2 <- calculate_features(data = simData,                                        id_var = \"id\",                                        time_var = \"timepoint\",                                        values_var = \"values\",                                        group_var = \"process\",                                        feature_set = c(\"catch22\", \"feasts\")) multi_outputs <- fit_multi_feature_classifier(feature_matrix2,                                                id_var = \"id\",                                                group_var = \"group\",                                                by_set = TRUE,                                                test_method = \"svmLinear\",                                               use_balanced_accuracy = TRUE,                                               use_k_fold = TRUE,                                               num_folds = 10,                                               use_empirical_null =  TRUE,                                               null_testing_method = \"null model fits\",                                               p_value_method = \"gaussian\",                                               num_permutations = 10,                                               seed = 123) print(multi_outputs$FeatureSetResultsPlot) head(multi_outputs$TestStatistics) #>     method  accuracy p_value_accuracy balanced_accuracy #> 1: catch22 0.6833333     2.012896e-52         0.5562302 #> 2:  feasts 0.7666667    2.189714e-151         0.7041667 #>    p_value_balanced_accuracy classifier_name #> 1:              2.309327e-20       svmLinear #> 2:             1.135185e-176       svmLinear #>                                                       statistic_name #> 1: Mean classification accuracy and balanced classification accuracy #> 2: Mean classification accuracy and balanced classification accuracy head(multi_outputs$RawClassificationResults) #>     accuracy accuracy_sd balanced_accuracy balanced_accuracy_sd category #> 1: 0.6833333  0.05270463         0.5562302           0.10170625     Main #> 2: 0.1833333  0.04573737         0.1859590           0.09948285     Null #> 3: 0.1777778  0.05105203         0.1567791           0.07570992     Null #> 4: 0.1777778  0.07314229         0.1351323           0.05621057     Null #> 5: 0.2611111  0.09091065         0.2686706           0.12903392     Null #> 6: 0.1388889  0.10877167         0.1195238           0.10164942     Null #>     method num_features_used classifier_name #> 1: catch22                22       svmLinear #> 2: catch22                22       svmLinear #> 3: catch22                22       svmLinear #> 4: catch22                22       svmLinear #> 5: catch22                22       svmLinear #> 6: catch22                22       svmLinear #>                                                       statistic_name #> 1: Mean classification accuracy and balanced classification accuracy #> 2: Mean classification accuracy and balanced classification accuracy #> 3: Mean classification accuracy and balanced classification accuracy #> 4: Mean classification accuracy and balanced classification accuracy #> 5: Mean classification accuracy and balanced classification accuracy #> 6: Mean classification accuracy and balanced classification accuracy"},{"path":"https://hendersontrent.github.io/theft/articles/theft.html","id":"reading-and-processing-hctsa-formatted-files","dir":"Articles","previous_headings":"","what":"Reading and processing hctsa-formatted files","title":"Introduction to theft","text":"theft based foundations laid hctsa, also functionality reading hctsa-formatted Matlab files automatically processing tidy dataframes ready feature extraction theft. process_hctsa_file function takes string filepath Matlab file work , returning dataframe naming conventions consistent theft functionality. per hctsa specifications Input File Format 1, file 3 variables following exact names: timeSeriesData, labels, keywords. example using Bonn University EEG dataset3.","code":"d2 <- process_hctsa_file(\"https://cloudstor.aarnet.edu.au/plus/s/6sRD6IPMJyZLNlN/download\")"},{"path":"https://hendersontrent.github.io/theft/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Trent Henderson. Maintainer, author. Annie Bryant. Contributor.            Balanced classification accuracy","code":""},{"path":"https://hendersontrent.github.io/theft/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Henderson T (2022). theft: Tools Handling Extraction Features Time series. R package version 0.3.9.3, https://hendersontrent.github.io/theft/.","code":"@Manual{,   title = {theft: Tools for Handling Extraction of Features from Time series},   author = {Trent Henderson},   year = {2022},   note = {R package version 0.3.9.3},   url = {https://hendersontrent.github.io/theft/}, }"},{"path":"https://hendersontrent.github.io/theft/index.html","id":"theft-","dir":"","previous_headings":"","what":"Tools for Handling Extraction of Features from Time series","title":"Tools for Handling Extraction of Features from Time series","text":"Tools Handling Extraction Features Time series (theft)","code":""},{"path":"https://hendersontrent.github.io/theft/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Handling Extraction of Features from Time series","text":"Coming CRAN soon… Stay posted! can install development version theft GitHub using following:","code":"devtools::install_github(\"hendersontrent/theft\")"},{"path":"https://hendersontrent.github.io/theft/index.html","id":"general-purpose","dir":"","previous_headings":"","what":"General purpose","title":"Tools for Handling Extraction of Features from Time series","text":"theft software package R facilitates user-friendly access structured analytical workflow extraction, analysis, visualisation time-series features. package provides single point access large number time-series features range existing R Python packages lets user specify groups () features calculate. packages theft currently ‘steals’ features include: catch22 (R; see Rcatch22 native implementation CRAN) feasts (R) tsfeatures (R) kats (Python) tsfresh (Python) tsfel (Python) Note kats, tsfresh tsfel Python packages. R package reticulate used call Python code uses packages applies within broader tidy data philosophy embodied theft. present, depending input time series, theft provides access >1300 features. Prior using theft (want use kats, tsfresh tsfel feature sets; R-based sets run fine) working Python installation download kats using instructions located , tsfresh /tsfel . comprehensive comparison six feature sets, please refer recent paper Empirical Evaluation Time-Series Feature Sets.","code":""},{"path":"https://hendersontrent.github.io/theft/index.html","id":"statistical-and-graphical-tools","dir":"","previous_headings":"","what":"Statistical and graphical tools","title":"Tools for Handling Extraction of Features from Time series","text":"theft also contains extensive suite tools automatic processing extracted feature vectors (including data quality assessments normalisation methods), low dimensional projections (linear nonlinear), data matrix visualisations, single feature multiple feature time-series classification procedures, various statistical graphical tools.","code":""},{"path":"https://hendersontrent.github.io/theft/index.html","id":"web-application","dir":"","previous_headings":"","what":"Web application","title":"Tools for Handling Extraction of Features from Time series","text":"interactive web application built top theft enables users access functionality included package within web browser without code. application automates entire workflow included theft, converts static graphics included package interactive visualisations, enables downloads feature calculations. Note since theft active development project, functionality copied across webtool yet.","code":""},{"path":"https://hendersontrent.github.io/theft/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Tools for Handling Extraction of Features from Time series","text":"","code":"To cite package 'theft' in publications use:    Trent Henderson (2022). theft: Tools for Handling Extraction of   Features from Time series. R package version 0.3.9.3.   https://hendersontrent.github.io/theft/  A BibTeX entry for LaTeX users is    @Manual{,     title = {theft: Tools for Handling Extraction of Features from Time series},     author = {Trent Henderson},     year = {2022},     note = {R package version 0.3.9.3},     url = {https://hendersontrent.github.io/theft/},   }"},{"path":"https://hendersontrent.github.io/theft/reference/calculate_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute features on an input time series dataset — calculate_features","title":"Compute features on an input time series dataset — calculate_features","text":"Compute features input time series dataset","code":""},{"path":"https://hendersontrent.github.io/theft/reference/calculate_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute features on an input time series dataset — calculate_features","text":"","code":"calculate_features(   data,   id_var = NULL,   time_var = NULL,   values_var = NULL,   group_var = NULL,   feature_set = c(\"catch22\", \"feasts\", \"tsfeatures\", \"kats\", \"tsfresh\", \"tsfel\"),   catch24 = FALSE,   tsfresh_cleanup = FALSE )"},{"path":"https://hendersontrent.github.io/theft/reference/calculate_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute features on an input time series dataset — calculate_features","text":"data dataframe least 4 columns: id variable, group variable, time variable, value variable id_var string specifying ID variable identify time series. Defaults NULL time_var string specifying time index variable. Defaults NULL values_var string specifying values variable. Defaults NULL group_var string specifying grouping variable unique series sits (one exists). Defaults NULL feature_set set time-series features calculate. Defaults catch22 catch24 Boolean specifying whether compute catch24 addition catch22 catch22 one feature sets selected. Defaults FALSE tsfresh_cleanup Boolean specifying whether use -built tsfresh relevant feature filter . Defaults FALSE","code":""},{"path":"https://hendersontrent.github.io/theft/reference/calculate_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute features on an input time series dataset — calculate_features","text":"object class dataframe contains summary statistics feature","code":""},{"path":"https://hendersontrent.github.io/theft/reference/calculate_features.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute features on an input time series dataset — calculate_features","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/calculate_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute features on an input time series dataset — calculate_features","text":"","code":"if (FALSE) { featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\") }"},{"path":"https://hendersontrent.github.io/theft/reference/check_vector_quality.html","id":null,"dir":"Reference","previous_headings":"","what":"Check data quality of a vector — check_vector_quality","title":"Check data quality of a vector — check_vector_quality","text":"Check data quality vector","code":""},{"path":"https://hendersontrent.github.io/theft/reference/check_vector_quality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check data quality of a vector — check_vector_quality","text":"","code":"check_vector_quality(x)"},{"path":"https://hendersontrent.github.io/theft/reference/check_vector_quality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check data quality of a vector — check_vector_quality","text":"x input data vector","code":""},{"path":"https://hendersontrent.github.io/theft/reference/check_vector_quality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check data quality of a vector — check_vector_quality","text":"Boolean whether data good extract features ","code":""},{"path":"https://hendersontrent.github.io/theft/reference/check_vector_quality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check data quality of a vector — check_vector_quality","text":"","code":"x <- rnorm(x) #> Error in rnorm(x): object 'x' not found check_vector_quality(x) #> Error in check_vector_quality(x): could not find function \"check_vector_quality\""},{"path":"https://hendersontrent.github.io/theft/reference/compute_top_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Return an object containing results from top-performing features on a classification task — compute_top_features","title":"Return an object containing results from top-performing features on a classification task — compute_top_features","text":"Return object containing results top-performing features classification task","code":""},{"path":"https://hendersontrent.github.io/theft/reference/compute_top_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return an object containing results from top-performing features on a classification task — compute_top_features","text":"","code":"compute_top_features(   data,   id_var = \"id\",   group_var = \"group\",   num_features = 40,   normalise_violin_plots = FALSE,   method = c(\"z-score\", \"Sigmoid\", \"RobustSigmoid\", \"MinMax\"),   cor_method = c(\"pearson\", \"spearman\"),   test_method = \"gaussprRadial\",   use_balanced_accuracy = FALSE,   use_k_fold = FALSE,   num_folds = 10,   use_empirical_null = FALSE,   null_testing_method = c(\"model free shuffles\", \"null model fits\"),   p_value_method = c(\"empirical\", \"gaussian\"),   num_permutations = 50,   pool_empirical_null = FALSE,   seed = 123 )"},{"path":"https://hendersontrent.github.io/theft/reference/compute_top_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return an object containing results from top-performing features on a classification task — compute_top_features","text":"data dataframe containing raw feature matrix id_var string specifying ID variable group data (one exists). Defaults \"id\" group_var string specifying grouping variable data aggregates . Defaults \"group\" num_features number top features retain explore. Defaults 40 normalise_violin_plots Boolean whether normalise features plotting. Defaults FALSE method rescaling/normalising method apply. Defaults \"RobustSigmoid\" cor_method correlation method use. Defaults \"pearson\" test_method algorithm use quantifying class separation. Defaults \"gaussprRadial\" use_balanced_accuracy Boolean specifying whether use balanced accuracy summary metric caret model training. Defaults FALSE use_k_fold Boolean specifying whether use k-fold procedures generating distribution classification accuracy estimates caret model specified test_method. Defaults  FALSE num_folds integer specifying number k-folds perform use_k_fold set TRUE. Defaults 10 use_empirical_null Boolean specifying whether use empirical null procedures compute p-values caret model specified test_method. Defaults FALSE null_testing_method string specifying type statistical method use calculate p-values. Defaults model free shuffles p_value_method string specifying method calculating p-values. Defaults \"empirical\" num_permutations integer specifying number class label shuffles perform use_empirical_null TRUE. Defaults 50 pool_empirical_null Boolean specifying whether use pooled empirical null distribution features features' individual empirical null distribution caret model specified test_method use_empirical_null TRUE. Defaults FALSE seed fixed number R's random number generator ensure reproducibility","code":""},{"path":"https://hendersontrent.github.io/theft/reference/compute_top_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return an object containing results from top-performing features on a classification task — compute_top_features","text":"object class list containing dataframe results, feature x feature matrix plot, violin plot","code":""},{"path":"https://hendersontrent.github.io/theft/reference/compute_top_features.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return an object containing results from top-performing features on a classification task — compute_top_features","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/compute_top_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return an object containing results from top-performing features on a classification task — compute_top_features","text":"","code":"if (FALSE) { featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\")    compute_top_features(featMat,   id_var = \"id\",   group_var = \"group\",   num_features = 10,   normalise_violin_plots = FALSE,   method = \"RobustSigmoid\",   cor_method = \"pearson\",   test_method = \"gaussprRadial\",   use_balanced_accuracy = use_balanced_accuracy,   use_k_fold = FALSE,   num_folds = 10,   use_empirical_null = TRUE,   null_testing_method = \"model free shuffles\",   p_value_method = \"empirical\",   num_permutations = 100,   pool_empirical_null = FALSE,   seed = 123)  }"},{"path":"https://hendersontrent.github.io/theft/reference/feature_list.html","id":null,"dir":"Reference","previous_headings":"","what":"All features available in theft in tidy format — feature_list","title":"All features available in theft in tidy format — feature_list","text":"variables include:","code":""},{"path":"https://hendersontrent.github.io/theft/reference/feature_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All features available in theft in tidy format — feature_list","text":"","code":"feature_list"},{"path":"https://hendersontrent.github.io/theft/reference/feature_list.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"All features available in theft in tidy format — feature_list","text":"tidy dataframe 2 variables: feature_set Name set feature feature Name feature","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_multi_feature_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a classifier to feature matrix using all features or all features by set — fit_multi_feature_classifier","title":"Fit a classifier to feature matrix using all features or all features by set — fit_multi_feature_classifier","text":"Fit classifier feature matrix using features features set","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_multi_feature_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a classifier to feature matrix using all features or all features by set — fit_multi_feature_classifier","text":"","code":"fit_multi_feature_classifier(   data,   id_var = \"id\",   group_var = \"group\",   by_set = FALSE,   test_method = \"gaussprRadial\",   use_balanced_accuracy = FALSE,   use_k_fold = TRUE,   num_folds = 10,   use_empirical_null = FALSE,   null_testing_method = c(\"model free shuffles\", \"null model fits\"),   p_value_method = c(\"empirical\", \"gaussian\"),   num_permutations = 100,   seed = 123 )"},{"path":"https://hendersontrent.github.io/theft/reference/fit_multi_feature_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a classifier to feature matrix using all features or all features by set — fit_multi_feature_classifier","text":"data dataframe containing raw feature data calculated theft::calculate_features id_var string specifying ID variable group data (one exists). Defaults \"id\" group_var string specifying grouping variable data aggregates . Defaults \"group\" by_set Boolean specifying whether compute classifiers feature set. Defaults FALSE test_method algorithm use quantifying class separation. Defaults \"gaussprRadial\" use_balanced_accuracy Boolean specifying whether use balanced accuracy summary metric caret model training. Defaults FALSE use_k_fold Boolean specifying whether use k-fold procedures generating distribution classification accuracy estimates. Defaults TRUE num_folds integer specifying number folds (train-test splits) perform use_k_fold set TRUE. Defaults 10 use_empirical_null Boolean specifying whether use empirical null procedures compute p-values. Defaults FALSE null_testing_method string specifying type statistical method use calculate p-values. Defaults model free shuffles p_value_method string specifying method calculating p-values. Defaults \"empirical\" num_permutations integer specifying number class label shuffles perform use_empirical_null TRUE. Defaults 100 seed fixed number R's random number generator ensure reproducibility","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_multi_feature_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a classifier to feature matrix using all features or all features by set — fit_multi_feature_classifier","text":"object class list containing dataframe summaries classification models ggplot object by_set TRUE","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_multi_feature_classifier.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit a classifier to feature matrix using all features or all features by set — fit_multi_feature_classifier","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_multi_feature_classifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a classifier to feature matrix using all features or all features by set — fit_multi_feature_classifier","text":"","code":"if (FALSE) { featMat <- calculate_features(data = simData,   id_var = \"id\",   time_var = \"timepoint\",   values_var = \"values\",   group_var = \"process\",   feature_set = \"catch22\")  fit_multi_feature_classifier(featMat,   id_var = \"id\",   group_var = \"group\",   by_set = FALSE,   test_method = \"gaussprRadial\",   use_balanced_accuracy = FALSE,   use_k_fold = TRUE,   num_folds = 10,   use_empirical_null = TRUE,   null_testing_method = \"model free shuffles\",   p_value_method = \"empirical\",   num_permutations = 100,   seed = 123) }"},{"path":"https://hendersontrent.github.io/theft/reference/fit_multivariable_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a classifier to feature matrix using all features or all features by set — fit_multivariable_classifier","title":"Fit a classifier to feature matrix using all features or all features by set — fit_multivariable_classifier","text":"Fit classifier feature matrix using features features set","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_multivariable_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a classifier to feature matrix using all features or all features by set — fit_multivariable_classifier","text":"","code":"fit_multivariable_classifier(   data,   id_var = \"id\",   group_var = \"group\",   by_set = FALSE,   test_method = \"gaussprRadial\",   use_balanced_accuracy = FALSE,   use_k_fold = TRUE,   num_folds = 10,   use_empirical_null = FALSE,   null_testing_method = c(\"model free shuffles\", \"null model fits\"),   p_value_method = c(\"empirical\", \"gaussian\"),   num_permutations = 100,   seed = 123 )"},{"path":"https://hendersontrent.github.io/theft/reference/fit_multivariable_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a classifier to feature matrix using all features or all features by set — fit_multivariable_classifier","text":"data dataframe containing raw feature data calculated theft::calculate_features id_var string specifying ID variable group data (one exists). Defaults \"id\" group_var string specifying grouping variable data aggregates . Defaults \"group\" by_set Boolean specifying whether compute classifiers feature set. Defaults FALSE test_method algorithm use quantifying class separation. Defaults \"gaussprRadial\" use_balanced_accuracy Boolean specifying whether use balanced accuracy summary metric caret model training. Defaults FALSE use_k_fold Boolean specifying whether use k-fold procedures generating distribution classification accuracy estimates. Defaults TRUE num_folds integer specifying number folds (train-test splits) perform use_k_fold set TRUE. Defaults 10 use_empirical_null Boolean specifying whether use empirical null procedures compute p-values. Defaults FALSE null_testing_method string specifying type statistical method use calculate p-values. Defaults model free shuffles p_value_method string specifying method calculating p-values. Defaults \"empirical\" num_permutations integer specifying number class label shuffles perform use_empirical_null TRUE. Defaults 100 seed fixed number R's random number generator ensure reproducibility","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_multivariable_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a classifier to feature matrix using all features or all features by set — fit_multivariable_classifier","text":"object class list containing dataframe summaries classification models ggplot object by_set TRUE","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_multivariable_classifier.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit a classifier to feature matrix using all features or all features by set — fit_multivariable_classifier","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_multivariable_classifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a classifier to feature matrix using all features or all features by set — fit_multivariable_classifier","text":"","code":"if (FALSE) { featMat <- calculate_features(data = simData,   id_var = \"id\",   time_var = \"timepoint\",   values_var = \"values\",   group_var = \"process\",   feature_set = \"catch22\")  fit_multivariable_classifier(featMat,   id_var = \"id\",   group_var = \"group\",   by_set = FALSE,   test_method = \"gaussprRadial\",   use_balanced_accuracy = FALSE,   use_k_fold = TRUE,   num_folds = 10,   use_empirical_null = TRUE,   null_testing_method = \"model free shuffles\",   p_value_method = \"empirical\",   num_permutations = 100,   seed = 123) }"},{"path":"https://hendersontrent.github.io/theft/reference/fit_single_feature_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a classifier to feature matrix to extract top performers — fit_single_feature_classifier","title":"Fit a classifier to feature matrix to extract top performers — fit_single_feature_classifier","text":"Fit classifier feature matrix extract top performers","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_single_feature_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a classifier to feature matrix to extract top performers — fit_single_feature_classifier","text":"","code":"fit_single_feature_classifier(   data,   id_var = \"id\",   group_var = \"group\",   test_method = \"gaussprRadial\",   use_balanced_accuracy = FALSE,   use_k_fold = FALSE,   num_folds = 10,   use_empirical_null = FALSE,   null_testing_method = c(\"model free shuffles\", \"null model fits\"),   p_value_method = c(\"empirical\", \"gaussian\"),   num_permutations = 50,   pool_empirical_null = FALSE,   seed = 123,   return_raw_estimates = FALSE )"},{"path":"https://hendersontrent.github.io/theft/reference/fit_single_feature_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a classifier to feature matrix to extract top performers — fit_single_feature_classifier","text":"data dataframe containing raw feature matrix id_var string specifying ID variable group data (one exists). Defaults \"id\" group_var string specifying grouping variable data aggregates . Defaults \"group\" test_method algorithm use quantifying class separation. Defaults \"gaussprRadial\". either \"t-test\", \"wilcox\", \"binomial logistic\" two-class problems obtain exact statistics, valid caret classification model everything else use_balanced_accuracy Boolean specifying whether use balanced accuracy summary metric caret model training. Defaults FALSE use_k_fold Boolean specifying whether use k-fold procedures generating distribution classification accuracy estimates caret model specified test_method. Defaults  FALSE num_folds integer specifying number k-folds perform use_k_fold set TRUE. Defaults 10 use_empirical_null Boolean specifying whether use empirical null procedures compute p-values caret model specified test_method. Defaults FALSE null_testing_method string specifying type statistical method use calculate p-values. Defaults model free shuffles p_value_method string specifying method calculating p-values. Defaults \"empirical\" num_permutations integer specifying number class label shuffles perform use_empirical_null TRUE. Defaults 50 pool_empirical_null Boolean specifying whether use pooled empirical null distribution features features' individual empirical null distribution caret model specified test_method use_empirical_null TRUE. Defaults FALSE seed fixed number R's random number generator ensure reproducibility return_raw_estimates Boolean (testing purposes -- break compute_top_features!!) specifying whether return raw main null model results","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_single_feature_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a classifier to feature matrix to extract top performers — fit_single_feature_classifier","text":"object class dataframe containing results","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_single_feature_classifier.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit a classifier to feature matrix to extract top performers — fit_single_feature_classifier","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_single_feature_classifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a classifier to feature matrix to extract top performers — fit_single_feature_classifier","text":"","code":"if (FALSE) { featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\")    fit_single_feature_classifier(featMat,   id_var = \"id\",   group_var = \"group\",   test_method = \"linear svm\",   use_balanced_accuracy = FALSE,   use_k_fold = TRUE,   num_folds = 10,   use_empirical_null = TRUE,   null_testing_method = \"model free shuffles\",   p_value_method = \"empirical\",   num_permutations = 50,   pool_empirical_null = FALSE,   seed = 123,   return_raw_estimates = FALSE)  }"},{"path":"https://hendersontrent.github.io/theft/reference/fit_univariable_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a classifier to feature matrix to extract top performers — fit_univariable_classifier","title":"Fit a classifier to feature matrix to extract top performers — fit_univariable_classifier","text":"Fit classifier feature matrix extract top performers","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_univariable_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a classifier to feature matrix to extract top performers — fit_univariable_classifier","text":"","code":"fit_univariable_classifier(   data,   id_var = \"id\",   group_var = \"group\",   test_method = \"gaussprRadial\",   use_balanced_accuracy = FALSE,   use_k_fold = FALSE,   num_folds = 10,   use_empirical_null = FALSE,   null_testing_method = c(\"model free shuffles\", \"null model fits\"),   p_value_method = c(\"empirical\", \"gaussian\"),   num_permutations = 50,   pool_empirical_null = FALSE,   seed = 123,   return_raw_estimates = FALSE )"},{"path":"https://hendersontrent.github.io/theft/reference/fit_univariable_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a classifier to feature matrix to extract top performers — fit_univariable_classifier","text":"data dataframe containing raw feature matrix id_var string specifying ID variable group data (one exists). Defaults \"id\" group_var string specifying grouping variable data aggregates . Defaults \"group\" test_method algorithm use quantifying class separation. Defaults \"gaussprRadial\". either \"t-test\", \"wilcox\", \"binomial logistic\" two-class problems obtain exact statistics, valid caret classification model everything else use_balanced_accuracy Boolean specifying whether use balanced accuracy summary metric caret model training. Defaults FALSE use_k_fold Boolean specifying whether use k-fold procedures generating distribution classification accuracy estimates caret model specified test_method. Defaults  FALSE num_folds integer specifying number k-folds perform use_k_fold set TRUE. Defaults 10 use_empirical_null Boolean specifying whether use empirical null procedures compute p-values caret model specified test_method. Defaults FALSE null_testing_method string specifying type statistical method use calculate p-values. Defaults model free shuffles p_value_method string specifying method calculating p-values. Defaults \"empirical\" num_permutations integer specifying number class label shuffles perform use_empirical_null TRUE. Defaults 50 pool_empirical_null Boolean specifying whether use pooled empirical null distribution features features' individual empirical null distribution caret model specified test_method use_empirical_null TRUE. Defaults FALSE seed fixed number R's random number generator ensure reproducibility return_raw_estimates Boolean (testing purposes -- break compute_top_features!!) specifying whether return raw main null model results","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_univariable_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a classifier to feature matrix to extract top performers — fit_univariable_classifier","text":"object class dataframe containing results","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_univariable_classifier.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit a classifier to feature matrix to extract top performers — fit_univariable_classifier","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/fit_univariable_classifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a classifier to feature matrix to extract top performers — fit_univariable_classifier","text":"","code":"if (FALSE) { featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\")    fit_univariable_classifier(featMat,   id_var = \"id\",   group_var = \"group\",   test_method = \"linear svm\",   use_balanced_accuracy = FALSE,   use_k_fold = TRUE,   num_folds = 10,   use_empirical_null = TRUE,   null_testing_method = \"model free shuffles\",   p_value_method = \"empirical\",   num_permutations = 50,   pool_empirical_null = FALSE,   seed = 123,   return_raw_estimates = FALSE)  }"},{"path":"https://hendersontrent.github.io/theft/reference/init_theft.html","id":null,"dir":"Reference","previous_headings":"","what":"Communicate to R the correct Python version containing the relevant libraries for calculating features — init_theft","title":"Communicate to R the correct Python version containing the relevant libraries for calculating features — init_theft","text":"Communicate R correct Python version containing relevant libraries calculating features","code":""},{"path":"https://hendersontrent.github.io/theft/reference/init_theft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Communicate to R the correct Python version containing the relevant libraries for calculating features — init_theft","text":"","code":"init_theft(path_to_python)"},{"path":"https://hendersontrent.github.io/theft/reference/init_theft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Communicate to R the correct Python version containing the relevant libraries for calculating features — init_theft","text":"path_to_python string specifying filepath version Python containing relevant libraries calculating features","code":""},{"path":"https://hendersontrent.github.io/theft/reference/init_theft.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Communicate to R the correct Python version containing the relevant libraries for calculating features — init_theft","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/init_theft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Communicate to R the correct Python version containing the relevant libraries for calculating features — init_theft","text":"","code":"if (FALSE) { init_theft(\"~/opt/anaconda3/bin/python\") }"},{"path":"https://hendersontrent.github.io/theft/reference/minmax_scaler.html","id":null,"dir":"Reference","previous_headings":"","what":"This function rescales a vector of numerical values into the unit interval [0,1] — minmax_scaler","title":"This function rescales a vector of numerical values into the unit interval [0,1] — minmax_scaler","text":"function rescales vector numerical values unit interval [0,1]","code":""},{"path":"https://hendersontrent.github.io/theft/reference/minmax_scaler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function rescales a vector of numerical values into the unit interval [0,1] — minmax_scaler","text":"","code":"minmax_scaler(x)"},{"path":"https://hendersontrent.github.io/theft/reference/minmax_scaler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function rescales a vector of numerical values into the unit interval [0,1] — minmax_scaler","text":"x numeric vector, preferably feature values computed theft package functions","code":""},{"path":"https://hendersontrent.github.io/theft/reference/minmax_scaler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function rescales a vector of numerical values into the unit interval [0,1] — minmax_scaler","text":"x numeric vector, rescaled [0,1] unit interval","code":""},{"path":"https://hendersontrent.github.io/theft/reference/minmax_scaler.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This function rescales a vector of numerical values into the unit interval [0,1] — minmax_scaler","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/minmax_scaler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function rescales a vector of numerical values into the unit interval [0,1] — minmax_scaler","text":"","code":"if (FALSE) { x <- 1 + 0.5 * 1:1000 + arima.sim(list(ma = 0.5), n = 1000) outs <- minmax_scaler(x) }"},{"path":"https://hendersontrent.github.io/theft/reference/normalise_feature_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale each feature vector into a user-specified range for visualisation and modelling — normalise_feature_frame","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalise_feature_frame","text":"Scale feature vector user-specified range visualisation modelling","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalise_feature_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalise_feature_frame","text":"","code":"normalise_feature_frame(   data,   names_var = \"names\",   values_var = \"values\",   method = c(\"z-score\", \"Sigmoid\", \"RobustSigmoid\", \"MinMax\") )"},{"path":"https://hendersontrent.github.io/theft/reference/normalise_feature_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalise_feature_frame","text":"data dataframe least 2 columns: names variable (feature names) value variable names_var string denoting name variable/column holds feature names. Defaults \"names\" values_var string denoting name variable/column holds numerical feature values. Defaults \"values\" method rescaling/normalising method apply. Defaults \"RobustSigmoid\"","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalise_feature_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalise_feature_frame","text":"dataframe value column rescaled specified range","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalise_feature_frame.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalise_feature_frame","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalise_feature_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalise_feature_frame","text":"","code":"if (FALSE) { featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\")    normed <- normalise_feature_frame(featMat,    names_var = \"names\",    values_var = \"values\",    method = \"RobustSigmoid\") }"},{"path":"https://hendersontrent.github.io/theft/reference/normalise_feature_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale each value into a user-specified range for visualisation and analysis — normalise_feature_vector","title":"Scale each value into a user-specified range for visualisation and analysis — normalise_feature_vector","text":"Scale value user-specified range visualisation analysis","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalise_feature_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale each value into a user-specified range for visualisation and analysis — normalise_feature_vector","text":"","code":"normalise_feature_vector(   x,   method = c(\"z-score\", \"Sigmoid\", \"RobustSigmoid\", \"MinMax\") )"},{"path":"https://hendersontrent.github.io/theft/reference/normalise_feature_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale each value into a user-specified range for visualisation and analysis — normalise_feature_vector","text":"x vector scalar values method rescaling/normalising method apply. Defaults \"RobustSigmoid\"","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalise_feature_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale each value into a user-specified range for visualisation and analysis — normalise_feature_vector","text":"vector scalar values normalised selected range","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalise_feature_vector.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scale each value into a user-specified range for visualisation and analysis — normalise_feature_vector","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalise_feature_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale each value into a user-specified range for visualisation and analysis — normalise_feature_vector","text":"","code":"if (FALSE) { featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\")    x <- featMat %>%   filter(names == \"DN_HistogramMode_5\") %>%   pull(values)    xnormed <- normalise_feature_vector(x, method = \"RobustSigmoid\") }"},{"path":"https://hendersontrent.github.io/theft/reference/normalize_feature_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale each feature vector into a user-specified range for visualisation and modelling — normalize_feature_frame","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalize_feature_frame","text":"Scale feature vector user-specified range visualisation modelling","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalize_feature_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalize_feature_frame","text":"","code":"normalize_feature_frame(   data,   names_var = \"names\",   values_var = \"values\",   method = c(\"z-score\", \"Sigmoid\", \"RobustSigmoid\", \"MinMax\") )"},{"path":"https://hendersontrent.github.io/theft/reference/normalize_feature_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalize_feature_frame","text":"data dataframe least 2 columns: names variable (feature names) value variable names_var string denoting name variable/column holds feature names. Defaults \"names\" values_var string denoting name variable/column holds numerical feature values. Defaults \"values\" method rescaling/normalising method apply. Defaults \"RobustSigmoid\"","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalize_feature_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalize_feature_frame","text":"dataframe value column rescaled specified range","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalize_feature_frame.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalize_feature_frame","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalize_feature_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale each feature vector into a user-specified range for visualisation and modelling — normalize_feature_frame","text":"","code":"if (FALSE) { featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\")    normed <- normalize_feature_frame(featMat,    names_var = \"names\",    values_var = \"values\",    method = \"RobustSigmoid\") }"},{"path":"https://hendersontrent.github.io/theft/reference/normalize_feature_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale each value into a user-specified range for visualisation and analysis — normalize_feature_vector","title":"Scale each value into a user-specified range for visualisation and analysis — normalize_feature_vector","text":"Scale value user-specified range visualisation analysis","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalize_feature_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale each value into a user-specified range for visualisation and analysis — normalize_feature_vector","text":"","code":"normalize_feature_vector(   x,   method = c(\"z-score\", \"Sigmoid\", \"RobustSigmoid\", \"MinMax\") )"},{"path":"https://hendersontrent.github.io/theft/reference/normalize_feature_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale each value into a user-specified range for visualisation and analysis — normalize_feature_vector","text":"x vector scalar values method rescaling/normalising method apply. Defaults \"RobustSigmoid\"","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalize_feature_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale each value into a user-specified range for visualisation and analysis — normalize_feature_vector","text":"vector scalar values normalised selected range","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalize_feature_vector.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scale each value into a user-specified range for visualisation and analysis — normalize_feature_vector","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/normalize_feature_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale each value into a user-specified range for visualisation and analysis — normalize_feature_vector","text":"","code":"if (FALSE) { featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\")    x <- featMat %>%   filter(names == \"DN_HistogramMode_5\") %>%   pull(values)    xnormed <- normalise_feature_vector(x, method = \"RobustSigmoid\") }"},{"path":"https://hendersontrent.github.io/theft/reference/plot_feature_correlations.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a correlation matrix plot showing pairwise correlations of feature vectors by unique id with automatic hierarchical clustering. — plot_feature_correlations","title":"Produce a correlation matrix plot showing pairwise correlations of feature vectors by unique id with automatic hierarchical clustering. — plot_feature_correlations","text":"Produce correlation matrix plot showing pairwise correlations feature vectors unique id automatic hierarchical clustering.","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_feature_correlations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a correlation matrix plot showing pairwise correlations of feature vectors by unique id with automatic hierarchical clustering. — plot_feature_correlations","text":"","code":"plot_feature_correlations(   data,   is_normalised = FALSE,   id_var = \"id\",   names_var = \"names\",   values_var = \"values\",   method = c(\"z-score\", \"Sigmoid\", \"RobustSigmoid\", \"MinMax\"),   cor_method = c(\"pearson\", \"spearman\"),   interactive = FALSE )"},{"path":"https://hendersontrent.github.io/theft/reference/plot_feature_correlations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a correlation matrix plot showing pairwise correlations of feature vectors by unique id with automatic hierarchical clustering. — plot_feature_correlations","text":"data dataframe least 3 columns 'id', 'names' 'values' is_normalised Boolean whether input feature values already scaled. Defaults FALSE id_var string specifying ID variable compute pairwise correlations . Defaults \"id\" names_var string denoting name variable/column holds feature names. Defaults \"names\" values_var string denoting name variable/column holds numerical feature values. Defaults \"values\" method rescaling/normalising method apply. Defaults \"RobustSigmoid\" cor_method correlation method use. Defaults \"pearson\" interactive Boolean whether plot interactive plotly graphic. Defaults FALSE","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_feature_correlations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a correlation matrix plot showing pairwise correlations of feature vectors by unique id with automatic hierarchical clustering. — plot_feature_correlations","text":"object class ggplot contains correlation matrix graphic","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_feature_correlations.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce a correlation matrix plot showing pairwise correlations of feature vectors by unique id with automatic hierarchical clustering. — plot_feature_correlations","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_feature_correlations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a correlation matrix plot showing pairwise correlations of feature vectors by unique id with automatic hierarchical clustering. — plot_feature_correlations","text":"","code":"if (FALSE) { featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\")    plot_feature_correlations(data = featMat,    is_normalised = FALSE,    id_var = \"id\",    names_var = \"names\",    values_var = \"values\",   method = \"RobustSigmoid\",   interactive = FALSE) }"},{"path":"https://hendersontrent.github.io/theft/reference/plot_feature_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a heatmap matrix of the calculated feature value vectors and each unique time series with automatic hierarchical clustering. — plot_feature_matrix","title":"Produce a heatmap matrix of the calculated feature value vectors and each unique time series with automatic hierarchical clustering. — plot_feature_matrix","text":"Produce heatmap matrix calculated feature value vectors unique time series automatic hierarchical clustering.","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_feature_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a heatmap matrix of the calculated feature value vectors and each unique time series with automatic hierarchical clustering. — plot_feature_matrix","text":"","code":"plot_feature_matrix(   data,   is_normalised = FALSE,   id_var = \"id\",   method = c(\"z-score\", \"Sigmoid\", \"RobustSigmoid\", \"MinMax\"),   interactive = FALSE )"},{"path":"https://hendersontrent.github.io/theft/reference/plot_feature_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a heatmap matrix of the calculated feature value vectors and each unique time series with automatic hierarchical clustering. — plot_feature_matrix","text":"data dataframe least 2 columns called \"names\" \"values\" is_normalised Boolean whether input feature values already scaled. Defaults FALSE id_var string specifying ID variable identify time series. Defaults \"id\" method rescaling/normalising method apply. Defaults \"RobustSigmoid\" interactive Boolean whether plot interactive plotly graphic. Defaults FALSE","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_feature_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a heatmap matrix of the calculated feature value vectors and each unique time series with automatic hierarchical clustering. — plot_feature_matrix","text":"object class ggplot contains heatmap graphic","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_feature_matrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce a heatmap matrix of the calculated feature value vectors and each unique time series with automatic hierarchical clustering. — plot_feature_matrix","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_feature_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a heatmap matrix of the calculated feature value vectors and each unique time series with automatic hierarchical clustering. — plot_feature_matrix","text":"","code":"if (FALSE) { featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\")  plot_feature_matrix(featMat,    is_normalised = FALSE,    id_var = \"id\",    method = \"MinMax\",   interactive = FALSE) }"},{"path":"https://hendersontrent.github.io/theft/reference/plot_low_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a principal components analysis (PCA) on normalised feature values and render a bivariate plot to visualise it — plot_low_dimension","title":"Produce a principal components analysis (PCA) on normalised feature values and render a bivariate plot to visualise it — plot_low_dimension","text":"Produce principal components analysis (PCA) normalised feature values render bivariate plot visualise ","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_low_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a principal components analysis (PCA) on normalised feature values and render a bivariate plot to visualise it — plot_low_dimension","text":"","code":"plot_low_dimension(   data,   is_normalised = FALSE,   id_var = \"id\",   group_var = NULL,   method = c(\"z-score\", \"Sigmoid\", \"RobustSigmoid\", \"MinMax\"),   low_dim_method = c(\"PCA\", \"t-SNE\"),   perplexity = 30,   plot = TRUE,   show_covariance = FALSE )"},{"path":"https://hendersontrent.github.io/theft/reference/plot_low_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a principal components analysis (PCA) on normalised feature values and render a bivariate plot to visualise it — plot_low_dimension","text":"data dataframe least 2 columns called \"names\" \"values\" is_normalised Boolean whether input feature values already scaled. Defaults FALSE id_var string specifying ID variable uniquely identify time series. Defaults \"id\" group_var string specifying grouping variable data aggregates (one exists). Defaults NULL method rescaling/normalising method apply. Defaults \"z-score\" low_dim_method low dimensional embedding method use. Defaults \"PCA\" perplexity perplexity hyperparameter use t-SNE algorithm selected. Defaults 30 plot Boolean whether plot model fit information returned. Defaults TRUE show_covariance Boolean whether covariance ellipses shown plot. Defaults FALSE","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_low_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a principal components analysis (PCA) on normalised feature values and render a bivariate plot to visualise it — plot_low_dimension","text":"plot = TRUE, returns object class ggplot, plot = FALSE returns object class dataframe PCA results","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_low_dimension.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce a principal components analysis (PCA) on normalised feature values and render a bivariate plot to visualise it — plot_low_dimension","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_low_dimension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a principal components analysis (PCA) on normalised feature values and render a bivariate plot to visualise it — plot_low_dimension","text":"","code":"if (FALSE) { featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\")  plot_low_dimension(featMat,    is_normalised = FALSE,    id_var = \"id\",    group_var = \"State\",    method = \"RobustSigmoid\",    low_dim_method = \"PCA\",    plot = TRUE,   show_covariance = TRUE) }"},{"path":"https://hendersontrent.github.io/theft/reference/plot_quality_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a matrix visualisation of data types computed by feature calculation function. — plot_quality_matrix","title":"Produce a matrix visualisation of data types computed by feature calculation function. — plot_quality_matrix","text":"Produce matrix visualisation data types computed feature calculation function.","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_quality_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a matrix visualisation of data types computed by feature calculation function. — plot_quality_matrix","text":"","code":"plot_quality_matrix(data)"},{"path":"https://hendersontrent.github.io/theft/reference/plot_quality_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a matrix visualisation of data types computed by feature calculation function. — plot_quality_matrix","text":"data dataframe least 2 columns called \"names\" \"values\"","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_quality_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a matrix visualisation of data types computed by feature calculation function. — plot_quality_matrix","text":"object class ggplot","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_quality_matrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce a matrix visualisation of data types computed by feature calculation function. — plot_quality_matrix","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_quality_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a matrix visualisation of data types computed by feature calculation function. — plot_quality_matrix","text":"","code":"if (FALSE) { featMat <- calculate_features(data = simData,    id_var = \"id\",    time_var = \"timepoint\",    values_var = \"values\",    group_var = \"process\",    feature_set = \"catch22\")  plot_quality_matrix(data = featMat) }"},{"path":"https://hendersontrent.github.io/theft/reference/plot_ts_correlations.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a correlation matrix plot showing pairwise correlations of time series with automatic hierarchical clustering — plot_ts_correlations","title":"Produce a correlation matrix plot showing pairwise correlations of time series with automatic hierarchical clustering — plot_ts_correlations","text":"Produce correlation matrix plot showing pairwise correlations time series automatic hierarchical clustering","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_ts_correlations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a correlation matrix plot showing pairwise correlations of time series with automatic hierarchical clustering — plot_ts_correlations","text":"","code":"plot_ts_correlations(   data,   is_normalised = FALSE,   id_var = \"id\",   time_var = \"timepoint\",   values_var = \"values\",   method = c(\"z-score\", \"Sigmoid\", \"RobustSigmoid\", \"MinMax\"),   cor_method = c(\"pearson\", \"spearman\"),   interactive = FALSE )"},{"path":"https://hendersontrent.github.io/theft/reference/plot_ts_correlations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a correlation matrix plot showing pairwise correlations of time series with automatic hierarchical clustering — plot_ts_correlations","text":"data dataframewith least 2 columns \"id\" \"values\" variables is_normalised Boolean whether input feature values already scaled. Defaults FALSE id_var string specifying ID variable compute pairwise correlations . Defaults \"id\" time_var string specifying time index variable. Defaults NULL values_var string denoting name variable/column holds numerical feature values. Defaults \"values\" method rescaling/normalising method apply. Defaults \"RobustSigmoid\" cor_method correlation method use. Defaults \"pearson\" interactive Boolean whether plot interactive plotly graphic. Defaults FALSE","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_ts_correlations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a correlation matrix plot showing pairwise correlations of time series with automatic hierarchical clustering — plot_ts_correlations","text":"object class ggplot","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_ts_correlations.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce a correlation matrix plot showing pairwise correlations of time series with automatic hierarchical clustering — plot_ts_correlations","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/plot_ts_correlations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a correlation matrix plot showing pairwise correlations of time series with automatic hierarchical clustering — plot_ts_correlations","text":"","code":"if (FALSE) { plot_ts_correlations(data = featMat,    is_normalised = FALSE,    id_var = \"id\",    time_var = \"timepoint\",   values_var = \"values\",   method = \"RobustSigmoid\",   cor_method = \"person\",   interactive = FALSE) }"},{"path":"https://hendersontrent.github.io/theft/reference/process_hctsa_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Load in hctsa formatted MATLAB files of time series data into a tidy format ready for feature extraction — process_hctsa_file","title":"Load in hctsa formatted MATLAB files of time series data into a tidy format ready for feature extraction — process_hctsa_file","text":"Load hctsa formatted MATLAB files time series data tidy format ready feature extraction","code":""},{"path":"https://hendersontrent.github.io/theft/reference/process_hctsa_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load in hctsa formatted MATLAB files of time series data into a tidy format ready for feature extraction — process_hctsa_file","text":"","code":"process_hctsa_file(data)"},{"path":"https://hendersontrent.github.io/theft/reference/process_hctsa_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load in hctsa formatted MATLAB files of time series data into a tidy format ready for feature extraction — process_hctsa_file","text":"data string specifying filepath MATLAB file parse","code":""},{"path":"https://hendersontrent.github.io/theft/reference/process_hctsa_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load in hctsa formatted MATLAB files of time series data into a tidy format ready for feature extraction — process_hctsa_file","text":"object class dataframe tidy format","code":""},{"path":"https://hendersontrent.github.io/theft/reference/process_hctsa_file.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load in hctsa formatted MATLAB files of time series data into a tidy format ready for feature extraction — process_hctsa_file","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/process_hctsa_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load in hctsa formatted MATLAB files of time series data into a tidy format ready for feature extraction — process_hctsa_file","text":"","code":"if (FALSE) { myfile <- process_hctsa_file(   \"https://cloudstor.aarnet.edu.au/plus/s/6sRD6IPMJyZLNlN/download\"   ) }"},{"path":"https://hendersontrent.github.io/theft/reference/robustsigmoid_scaler.html","id":null,"dir":"Reference","previous_headings":"","what":"This function rescales a vector of numerical values with an outlier-robust Sigmoidal transformation — robustsigmoid_scaler","title":"This function rescales a vector of numerical values with an outlier-robust Sigmoidal transformation — robustsigmoid_scaler","text":"function rescales vector numerical values outlier-robust Sigmoidal transformation","code":""},{"path":"https://hendersontrent.github.io/theft/reference/robustsigmoid_scaler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function rescales a vector of numerical values with an outlier-robust Sigmoidal transformation — robustsigmoid_scaler","text":"","code":"robustsigmoid_scaler(x, unitInt = TRUE)"},{"path":"https://hendersontrent.github.io/theft/reference/robustsigmoid_scaler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function rescales a vector of numerical values with an outlier-robust Sigmoidal transformation — robustsigmoid_scaler","text":"x numeric vector, preferably feature values computed theft package functions unitInt Booelan whether rescale Sigmoidal outputs unit interval [0,1]. Defaults TRUE","code":""},{"path":"https://hendersontrent.github.io/theft/reference/robustsigmoid_scaler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function rescales a vector of numerical values with an outlier-robust Sigmoidal transformation — robustsigmoid_scaler","text":"x numeric rescaled vector","code":""},{"path":"https://hendersontrent.github.io/theft/reference/robustsigmoid_scaler.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This function rescales a vector of numerical values with an outlier-robust Sigmoidal transformation — robustsigmoid_scaler","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/robustsigmoid_scaler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function rescales a vector of numerical values with an outlier-robust Sigmoidal transformation — robustsigmoid_scaler","text":"","code":"if (FALSE) { x <- 1 + 0.5 * 1:1000 + arima.sim(list(ma = 0.5), n = 1000) outs <- robustsigmoid_scaler(x) }"},{"path":"https://hendersontrent.github.io/theft/reference/sigmoid_scaler.html","id":null,"dir":"Reference","previous_headings":"","what":"This function rescales a vector of numerical values with a Sigmoidal transformation — sigmoid_scaler","title":"This function rescales a vector of numerical values with a Sigmoidal transformation — sigmoid_scaler","text":"function rescales vector numerical values Sigmoidal transformation","code":""},{"path":"https://hendersontrent.github.io/theft/reference/sigmoid_scaler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function rescales a vector of numerical values with a Sigmoidal transformation — sigmoid_scaler","text":"","code":"sigmoid_scaler(x, unitInt = TRUE)"},{"path":"https://hendersontrent.github.io/theft/reference/sigmoid_scaler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function rescales a vector of numerical values with a Sigmoidal transformation — sigmoid_scaler","text":"x numeric vector, preferably feature values computed theft package functions unitInt Booelan whether rescale Sigmoidal outputs unit interval [0,1]. Defaults TRUE","code":""},{"path":"https://hendersontrent.github.io/theft/reference/sigmoid_scaler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function rescales a vector of numerical values with a Sigmoidal transformation — sigmoid_scaler","text":"x numeric rescaled vector","code":""},{"path":"https://hendersontrent.github.io/theft/reference/sigmoid_scaler.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This function rescales a vector of numerical values with a Sigmoidal transformation — sigmoid_scaler","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/sigmoid_scaler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function rescales a vector of numerical values with a Sigmoidal transformation — sigmoid_scaler","text":"","code":"if (FALSE) { x <- 1 + 0.5 * 1:1000 + arima.sim(list(ma = 0.5), n = 1000) outs <- sigmoid_scaler(x) }"},{"path":"https://hendersontrent.github.io/theft/reference/simData.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample of randomly-generated time series to produce function tests and vignettes — simData","title":"Sample of randomly-generated time series to produce function tests and vignettes — simData","text":"variables include:","code":""},{"path":"https://hendersontrent.github.io/theft/reference/simData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample of randomly-generated time series to produce function tests and vignettes — simData","text":"","code":"simData"},{"path":"https://hendersontrent.github.io/theft/reference/simData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample of randomly-generated time series to produce function tests and vignettes — simData","text":"tidy dataframe 4 variables: id Unique identifier time series timepoint Time index values Value process Group label type time series","code":""},{"path":"https://hendersontrent.github.io/theft/reference/theft.html","id":null,"dir":"Reference","previous_headings":"","what":"Tools for Handling Extraction of Features from Time-series — theft","title":"Tools for Handling Extraction of Features from Time-series — theft","text":"Tools Handling Extraction Features Time-series","code":""},{"path":"https://hendersontrent.github.io/theft/reference/zscore_scaler.html","id":null,"dir":"Reference","previous_headings":"","what":"This function rescales a vector of numerical values into z-scores — zscore_scaler","title":"This function rescales a vector of numerical values into z-scores — zscore_scaler","text":"function rescales vector numerical values z-scores","code":""},{"path":"https://hendersontrent.github.io/theft/reference/zscore_scaler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function rescales a vector of numerical values into z-scores — zscore_scaler","text":"","code":"zscore_scaler(x)"},{"path":"https://hendersontrent.github.io/theft/reference/zscore_scaler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function rescales a vector of numerical values into z-scores — zscore_scaler","text":"x numeric vector, preferably feature values computed theft package functions","code":""},{"path":"https://hendersontrent.github.io/theft/reference/zscore_scaler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function rescales a vector of numerical values into z-scores — zscore_scaler","text":"x numeric vector, rescaled z-scores","code":""},{"path":"https://hendersontrent.github.io/theft/reference/zscore_scaler.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This function rescales a vector of numerical values into z-scores — zscore_scaler","text":"Trent Henderson","code":""},{"path":"https://hendersontrent.github.io/theft/reference/zscore_scaler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function rescales a vector of numerical values into z-scores — zscore_scaler","text":"","code":"if (FALSE) { x <- 1 + 0.5 * 1:1000 + arima.sim(list(ma = 0.5), n = 1000) outs <- zscore_scaler(x) }"}]
