% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_classification_engine.R
\name{run_classification_engine}
\alias{run_classification_engine}
\title{Fit a statistical or machine learning model to predict group membership of feature-space time-series data}
\usage{
run_classification_engine(
  data,
  id_var = NULL,
  group_var = NULL,
  premise = c("inference", "prediction"),
  method = c("GAM", "MixedGAM", "BayesGLM", "MixedBayesGLM", "SVM", "RandomForest",
    "NeuralNet")
)
}
\arguments{
\item{data}{a tidy dataframe of feature results where each feature is a separate column}

\item{id_var}{a variable that uniquely identifies each observation}

\item{group_var}{a variable that denotes the categorical groups each observation relates to and is the target of prediction}

\item{premise}{the type of analytical work to be conducted. Defaults to 'prediction'}

\item{method}{the classification model to use. Defaults to non-mixed-effects Generalised Additive Model 'GAM'}
}
\value{
an object of the class of model that was fit
}
\description{
Fit a statistical or machine learning model to predict group membership of feature-space time-series data
}
\examples{
\dontrun{
library(dplyr)
temp <- tempfile()
download.file("https://ndownloader.figshare.com/files/24950795",temp)
ts <- read.csv(temp, header = FALSE)

ts <- ts \%>\%
  dplyr::mutate(id = dplyr::row_number()) \%>\%
  tidyr::pivot_longer(!id, names_to = "timepoint", values_to = "value") \%>\%
  dplyr::mutate(timepoint = as.numeric(gsub("V", "\\\\1", timepoint)))

temp1 <- tempfile()
download.file("https://ndownloader.figshare.com/files/24950798",temp1)
ts_info <- read.csv(temp1, header = TRUE)

main <- ts \%>\%
  dplyr::left_join(ts_info, by = c("id" = "ID")) \%>\%
  dplyr::mutate(group = dplyr::case_when(
                grepl("synthetic", Keywords)  ~ 1,
                !grepl("synthetic", Keywords) ~ 0)) # Creates binary

ids <- unique(main$id)
ids_filt <- sample(ids, 50) # Random small sample to test

d1 <- main \%>\%
  dplyr::filter(id \%in\% ids_filt)
 
 outs <- calculate_features(data = main_filt, id_var = "id", group_var = "group", time_var = "timepoint", value_var = "value", feature_set = "feasts")
 outsN <- normalise_feature_frame(data = outs, names_var = "names", values_var = "values", method = "RobustSigmoid")
 mod <- run_classification_engine(data = outsN, id_var = "id", group_var = "group", premise = "inference", method = "BayesGLM")
}

}
\references{
Wood, S.N. (2011) Fast stable restricted maximum likelihood and marginal likelihood estimation of semiparametric generalized linear models. Journal of the Royal Statistical Society (B) 73(1):3-36

Stan Development Team (2020). RStan: the R interface to Stan. R package version 2.21.2. http://mc-stan.org/.

David Meyer, Evgenia Dimitriadou, Kurt Hornik, Andreas Weingessel and Friedrich Leisch (2019). e1071: Misc Functions of the Department of Statistics, Probability Theory Group (Formerly: E1071), TU Wien. R package version 1.7-3. https://CRAN.R-project.org/package=e1071

A. Liaw and M. Wiener (2002). Classification and Regression by randomForest. R News 2(3), 18--22.

Stefan Fritsch, Frauke Guenther and Marvin N. Wright (2019). neuralnet: Training of Neural Networks. R package version 1.44.2. https://CRAN.R-project.org/package=neuralnet
}
\author{
Trent Henderson
}
